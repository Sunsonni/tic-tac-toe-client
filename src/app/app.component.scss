/*
break point map for values. Values based on bootstrap docs. Don't know if needed for my current uses o_O
https://adrianmanduc.medium.com/how-to-create-a-scss-mixin-for-responsive-design-8aad4f70f1d5
*/
$breakpoints: (
  sm: (
    min: 576px,
    max: 575.98px
  ),
  md: (
    min: 768px,
    max: 767.98px
  ),
  lg: (
    min: 992px,
    max: 991.98px
  ),
  xl: (
    min: 1200px,
    max: 1199.98px
  ),
  xxl: (
    min: 1400px,
    max: 1399.98px
  )
);

//breakpoint is values created or custom values. direction determines if it does up or down.
@mixin breakpoint($breakpoint, $direction:min) {
  //check if the break point exists in map
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-values: map-get($breakpoints, $breakpoint);
    $breakpoint-min: map-get($breakpoint-values, min);
    $breakpoint-max: map-get($breakpoint-values, max);

    @if $direction == min {
      @media (min-width: $breakpoint-min) {
        @content;
      }
    }

    @else {
      @media (max-width: $breakpoint-max) {
        @content;
      }
    }

  }

}



.app {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.game-options {
  display: flex;
  flex-direction: row;
  gap: 10px;
}


.grid {
  display: grid;  
  width: 80%;
  grid-template-columns: repeat(3, 1fr);
  background-color: white;
  gap: 8px;

  @include breakpoint(lg, min) {
    width: 50%;
  }

  @include breakpoint(xl, min) {
    width: 40%;
  }
  
}


.grid-item {
  background-color: white;
  display: flex;
  align-items: center;
  justify-content: center;
}

.grid-item button {
  aspect-ratio: 1;
  background-color: #FFDCDC;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  border: none;
  font-size: 16px;
  cursor: pointer;
}

